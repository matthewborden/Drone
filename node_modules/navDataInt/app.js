exports.processNavdata = processNavdata;
exports.runEffects = runEffects;
exports.getImageData = getImageData;
exports.landingCode = landingCode;
exports.DemoState = 'TRUE';
exports.altitudeMax = 4000;

function getImageData(buffer) {

	console.log("recived data")
	/*
	var my_matrix = new jsfeat.matrix_t(columns, rows, data_type, image);

	var corners = [],
		image_width = img.cols,
		image_height = img.rows,
		radius = 5,
		pyramid_levels = 1; // for now only single level support

	// YAPE needs init before running detection
	jsfeat.yape.init(image_width, image_height, radius, pyramid_levels);

	// you should use preallocated point2d_t array
	for (var i = 0; i < img.cols * img.rows, ++i) {
		corners[i] = new jsfeat.point2d_t(0, 0, 0, 0);
	}

	// perform detection
	// returns the amount of detected corners
	var count = jsfeat.yape.detect(img: matrix_t, corners: Array, border = 4)
	
	*/
}

function runEffects() {
	var effects = ['phiM30Deg', 'phi30Deg', 'thetaM30Deg', 'theta30Deg', 'theta20degYaw200deg', 'theta20degYawM200deg', 'turnaround', 'turnaroundGodown', 'yawShake', 'yawDance', 'phiDance', 'thetaDance', 'vzDance', 'wave', 'phiThetaMixed', 'doublePhiThetaMixed', 'flipAhead', 'flipBehind', 'flipLeft', 'flipRight'];
	client.animate(effects[Math.random(0, effects.length - 1) * 10 - 1], 4000);
}

cte_old = 0;
cte_sum = 0;
	
var oldTime = new Date();

function processNavdata(navData) {
	console.log(navData);
	console.log("[" + navData.demo.altitudeMeters + "," + navData.demo.batteryPercentage + "," + (new Date() - oldTime) + "]");

	height = navData.demo.altitudeMeters;
	desiredHeight = 1;
	
	var cte = desiredHeight - height;
	var  time = new Date() - oldTime;
		 //dist =  * time;

	var change = cte - cte_old;
	var cte_sum = cte_sum + cte;
	var cte_old = cte;

	newSpeed = (0.1 * cte); // - (1 * change / time) - (1 * cte_sum)
	if (newSpeed >= 0) { client.up(newSpeed)} else {client.down(newSpeed)}
	 oldTime = new Date();
}



function landingCode(answer) {
	if (answer == "1234") {
		//rl.close();
		client.land();
		console.log("The drone is now landing");
	} else {
		console.log("Wrong Landing Code");
	}
}